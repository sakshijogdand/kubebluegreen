image: rvancea/maven-chrome-jdk8:latest

stages:          # List of stages for jobs, and their order of execution
  - build
 # - mvninstall
  - docker build
  - test
  - package 
  - variables
  #- sonarcloud-check
  
#maven-package:
#    stage: mvninstall
#    script: "mvn install "


    
build-job:       # This job runs in the build stage, which runs first.
  stage: build
  script:
    - mvn clean install
    - echo "Compile complete."
  artifacts:
    paths:
      - target/

#docker-build:
 # image: docker
  #services:
   # - docker:dind
  #stage: docker build
  #script:
   # - mvn clean install 
    #- docker build -t springboot-demo:latest .
    #- docker run --network=host -e SONAR_HOST_URL='http://172.53.202.11:9000/' --user="$(RookiesBatch2022 -u):$(RookiesBatch2022 -g)" -v "$PWD:/usr/src" sonarsource/sonar-scanner-cli
    #- docker run -d -p 8080:8080 springboot-demo:latest
    #- docker images
    
docker-build:
  image: docker
  services:
    - docker:dind
  before_script:
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD"
  stage: package
  script:
    #- mvn install
    - docker build -t adityashitole456/helloworld1:latest .
    - docker info
    - docker push adityashitole456/helloworld1:latest
    - docker run -d -p 8080:8080 adityashitole456/helloworld1:latest


sonarqube-check:
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner-Dsonar.qualitygate.wait=true
  allow_failure: true


#test:
#  stage: test
#  script:
#    - mvn clean test


#variables:
#  SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
#  GIT_DEPTH: "1"  # Tells git to fetch all the branches of the project, required by the analysis task
#sonarcloud-check:
#  stage: test
#  image: maven:3.6.3-jdk-11
#  cache:
#    key: "${CI_JOB_NAME}"
#    paths:
#     - .sonar/cache
#  script:
#    - mvn verify sonar:sonar
# only:
#   - master

#sonarqube_master_job:
 #   image: sonarqube maven
  #stage: test
  #script:
    #- mvn --batch-mode verify sonar:sonar -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_LOGIN -Dsonar.password=$SONAR_PASSWORD
    #  - SONAR_TOKEN = 'a9c98b4041486e4f7496a2cc9c29cb76b55fa378' SONAR_HOST_URL = 'https://sonarcloud.io'
        
        #- Dsonar.host.url='https://sonarcloud.io/' -Dsonar.login='adityashitole456@gmail.com' -Dsonar.projectName='Java Hello World'  -Dsonar.sources='./src'  -Dsonar.projectKey='hello-world' -Dsonar.java.binaries='./target/classes'